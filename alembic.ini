# Alembic Konfigürasyonu

[alembic]
# Alembic migration dosyaları için script yolu
script_location = app/db/migrations

# şablon kullanımı
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d%%(second).2d_%%(rev)s_%%(slug)s

# time zone to use (defaults to system)
# timezone = UTC

# max length of characters to apply to the
# "slug" field
# truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# version location specification; this defaults
# to app/db/migrations/versions.  When using multiple version
# directories, initial revisions must be specified with --version-path
# version_locations = %(here)s/bar %(here)s/bat app/db/migrations/versions

# the output encoding used when revision files
# are written from script.py.mako
# output_encoding = utf-8

sqlalchemy.url = postgresql://postgres:postgres@localhost/telegram_bot

[post_write_hooks]
# post_write_hooks, yazdıktan sonra işlemler içindir
# yazma sonrası kanca ile biçimlendirme
hooks = black
black.type = console_scripts
black.entrypoint = black
black.options = -l 80 REVISION_SCRIPT_FILENAME

# Logging konfigürasyonu
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %%(asctime)s %%(levelname)-5.5s [%%(name)s] %%(message)s
datefmt = %%Y-%%m-%%d %%H:%%M:%%S 