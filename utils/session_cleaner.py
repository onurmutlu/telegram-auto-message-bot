"""
# ============================================================================ #
# Dosya: session_cleaner.py
# Yol: /Users/siyahkare/code/telegram-bot/utils/session_cleaner.py
# Ä°ÅŸlev: Telegram bot bileÅŸeni
#
# Build: 2025-04-01-00:07:55
# Versiyon: v3.4.0
# ============================================================================ #
#
# Bu modÃ¼l, Telegram bot uygulamasÄ±nÄ±n bileÅŸenlerinden biridir.
# - Ä°lgili servislere entegrasyon
# - Hata yÃ¶netimi ve loglama
# - Asenkron iÅŸlem desteÄŸi
#
# ============================================================================ #
"""
import os
import logging
import sqlite3
from pathlib import Path

logger = logging.getLogger(__name__)

def clean_sessions(session_path):
    """
    Bozuk oturum dosyalarÄ±nÄ± temizler ve saÄŸlÄ±klÄ± bir baÅŸlangÄ±Ã§ saÄŸlar
    
    Args:
        session_path: Session dosyasÄ±nÄ±n yolu
    
    Returns:
        bool: Temizlik baÅŸarÄ±lÄ±ysa True, deÄŸilse False
    """
    session_file = Path(session_path)
    journal_file = Path(f"{session_path}.session-journal")
    
    logger.info(f"ğŸ§¹ Oturum dosyalarÄ± temizleniyor: {session_file}")
    
    # Journal dosyasÄ±nÄ± temizle
    if journal_file.exists():
        try:
            os.remove(journal_file)
            logger.debug(f"Journal dosyasÄ± silindi: {journal_file}")
        except Exception as e:
            logger.error(f"Journal dosyasÄ± silinemedi: {e}")
            return False
            
    # Session dosyasÄ±nÄ± dÃ¼zelt
    if session_file.exists():
        try:
            # SQLite veritabanÄ±nÄ± onar
            conn = sqlite3.connect(session_file)
            conn.execute("VACUUM")
            conn.commit()
            conn.close()
            logger.debug(f"Session veritabanÄ± onarÄ±ldÄ±: {session_file}")
        except Exception as e:
            logger.error(f"Session onarÄ±lamadÄ±: {e}")
            if "database is locked" in str(e):
                logger.warning("VeritabanÄ± kilitli, baÄŸlantÄ±larÄ± temizleme deneniyor...")
                try:
                    # EÄŸer kilit varsa dosyayÄ± yeniden oluÅŸtur
                    os.rename(session_file, f"{session_file}.bak")
                    logger.info(f"Bozuk session yedeklendi: {session_file}.bak")
                except Exception as e2:
                    logger.error(f"Session dosyasÄ± yeniden adlandÄ±rÄ±lamadÄ±: {e2}")
                    return False
            else:
                return False
    
    logger.info("âœ… Oturum dosyalarÄ± baÅŸarÄ±yla temizlendi")
    return True